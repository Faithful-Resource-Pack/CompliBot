{
	"New event template": {
		"prefix": "net",
		"body": [
			"import { Event } from '@interfaces';",
			"export default {",
			"\tname: \"${1:Name}\",",
			"\tasync execute(client, ${2:/* args */}) {",
			"\t\t${3://todo: implement event",
			"\t}},\n} as Event;"
		]
	},

	"New async command template": {
		"prefix": "nact",
		"body": [
			"import { SlashCommand, SyncSlashCommandBuilder } from \"@interfaces\";",
			"import { Client, ChatInputCommandInteraction, EmbedBuilder } from \"@client\";",
			"import { SlashCommandBuilder } from \"discord.js\";",
			"export const command: SlashCommand = {",
			"\tasync data(client: Client): Promise<SyncSlashCommandBuilder> {",
			"\t\t/**",
			"\t\t * todo: implement fetched stuff here",
			"\t\t */",
			"\t\treturn new SlashCommandBuilder()",

			"\t\t\t.setName(\"${1:Name}\")",
			"\t\t\t.setDescription(\"${1:Description}\"),",
			"\t},",
			"\tasync execute(interaction: ChatInputCommandInteraction) {",
            "\t\tif (!interaction.hasPermission(${3})) return;",
			"\t\t${4://todo: implement command}",
			"\t},\n};"
		]
	},

	"New command template": {
		"prefix": "nct",
		"body": [
			"import { SlashCommand } from \"@interfaces\";",
			"import { Client, ChatInputCommandInteraction, EmbedBuilder } from \"@client\";",
			"import { SlashCommandBuilder } from \"discord.js\";",
			"export const command: SlashCommand = {",
			"\tdata: new SlashCommandBuilder()",

			"\t\t.setName(\"${1:Name}\")",
			"\t\t.setDescription(`${2:Description}`),",
			"\tasync execute(interaction: ChatInputCommandInteraction) {",
            "\t\tif (!interaction.hasPermission(${3})) return;",
			"\t\t${4://todo: implement command}",
			"\t},\n};"
		]
	},
}