{
	"New event template": {
		"prefix": "net",
		"body": [
			"import { Event } from '@interfaces';",
			"export const event: Event = {",
			"\tname: \"${1:Name}\",",
			"\trun: async (client, ${2:/* args */}) => {",
			"\t\t${3://todo: implement event",
			"\t},\n};"
		]
	},

	"New async command template": {
		"prefix": "nact",
		"body": [
			"import { SlashCommand, SyncSlashCommandBuilder } from \"@interfaces\";",
			"import { Client, CommandInteraction, Message, MessageEmbed } from \"@client\";",
			"import { SlashCommandBuilder } from \"@discordjs/builders\";",
			"export const command: SlashCommand = {",
			"\tdata: async (client: Client): Promise<SyncSlashCommandBuilder> => {",
			"\t\t/**",
			"\t\t * todo: implement fetched stuff here",
			"\t\t */",
			"\t\treturn new SlashCommandBuilder()",
			"\t\t\t.setDefaultPermission(true)",
			"\t\t\t.setName(\"${1:Name}\")",
			"\t\t\t.setDescription(\"${1:Description}\"),",
			"\t},",
			"\texecute: async (interaction: CommandInteraction, client: Client) => {",
            "\t\tif (await interaction.perms({${3}})) return;",
			"\t\t${4://todo: implement command}",
			"\t},\n};"
		]
	},

	"New command template": {
		"prefix": "nct",
		"body": [
			"import { SlashCommand } from \"@interfaces\";",
			"import { Client, CommandInteraction, Message, MessageEmbed } from \"@client\";",
			"import { SlashCommandBuilder } from \"@discordjs/builders\";",
			"export const command: SlashCommand = {",
			"\tdata: new SlashCommandBuilder()",
			"\t\t.setDefaultPermission(true)",
			"\t\t.setName(\"${1:Name}\")",
			"\t\t.setDescription(`${2:Description}`),",
			"\texecute: async (interaction: CommandInteraction, client: Client) => {",
            "\t\tif (await interaction.perms({${3}})) return;",
			"\t\t${4://todo: implement command}",
			"\t},\n};"
		]
	},
}