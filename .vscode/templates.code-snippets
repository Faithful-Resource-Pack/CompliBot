{
	"New event template": {
		"prefix": "net",
		"description": "Client-emitted event template.",
		"body": [
			"import type { Event } from \"@interfaces/events\";",
			"\nexport default {",
			"\tname: \"${1:Name}\",",
			"\tasync execute(client, ${2:/* args */}) {",
			"\t\t${3://todo: implement event",
			"\t}},\n} as Event;"
		]
	},

	"New async command template": {
		"prefix": "nact",
		"description": "For non-static slash command data.",
		"body": [
			"import type { SlashCommand, SyncSlashCommandBuilder } from \"@interfaces/interactions\";",
			"import { EmbedBuilder } from \"@client\";",
			"import { SlashCommandBuilder } from \"discord.js\";",
			"\nexport const command: SlashCommand = {",
			"\tasync data(client): Promise<SyncSlashCommandBuilder> {",
			"\t\t/**",
			"\t\t * todo: implement fetched stuff here",
			"\t\t */",
			"\t\treturn new SlashCommandBuilder()",
			"\t\t\t.setName(\"${1:Name}\")",
			"\t\t\t.setDescription(\"${2:Description}\");",
			"\t},",
			"\tasync execute(interaction) {",
			"\t\t${3://todo: implement command}",
			"\t},\n};"
		]
	},

	"New command template": {
		"prefix": "nct",
		"description": "Regular slash command template.",
		"body": [
			"import type { SlashCommand } from \"@interfaces/interactions\";",
			"import { EmbedBuilder } from \"@client\";",
			"import { SlashCommandBuilder } from \"discord.js\";",
			"\nexport const command: SlashCommand = {",
			"\tdata: new SlashCommandBuilder()",
			"\t\t.setName(\"${1:Name}\")",
			"\t\t.setDescription(`${2:Description}`),",
			"\tasync execute(interaction) {",
			"\t\t${3://todo: implement command}",
			"\t},\n};"
		]
	},

	"New component template": {
		"prefix": "ncpt",
		"description": "Generic component template for buttons, menus, and modals.",
		"body": [
			"import type { Component } from \"@interfaces\";",
			"\nexport default {",
			"\tid: \"${1:Name}\"",
			"\tasync execute(client, interaction) {",
			"\t\t${3://todo: implement component}",
			"\t}",
			"} as Component<${2:Interaction}>;"
		]
	},

	"Slash command permissions": {
		"prefix": "scpm",
		"description": "Return early if permission is not met",
		"body": [
			"if (!interaction.hasPermission(\"${1:type})\") return;",
		]
	}
}